apiVersion: apps/v1
kind: Deployment
metadata:
  name: web
  namespace: cfitech
  labels:
    app: web
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 2
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: web
  template:
    metadata:
      labels:
        app: web
    spec:
#     affinity:
#       podAffinity:
#         preferredDuringSchedulingIgnoredDuringExecution:
#         - podAffinityTerm:
#             topologyKey: topology.kubernetes.io/zone
#             labelSelector:
#               matchLabels:
#                 app: mysql
#           weight: 100
#       podAntiAffinity:
#         requiredDuringSchedulingIgnoredDuringExecution:
#         - topologyKey: topology.kubernetes.io/zone
#           labelSelector:
#             matchLabels:
#               app: web
#     initContainers:
#     - name: init-db
#       image: busybox:1.28
#       command: [ 'sh', '-c', "until nslookup sql.cfitech.svc.cluster.local; do echo waiting for db; sleep 2; done" ]
      containers:
      - name: nginx
        image: nginx:1.25
        ports:
        - containerPort: 80
          name: http
---
apiVersion: v1
kind: Service
metadata:
  name: web
  namespace: cfitech
spec:
  type: NodePort
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: web
